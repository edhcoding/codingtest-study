function solution(N, stages) {
  var result = [];
  // 실패율 = (스테이지에 머물러 있는 사용자 수) / (스테이지에 도달한 전체 사용자 수)
  // 스테이지에 도달한 유저가 없으면 실패율은 0
  // 실패율을 내림차순으로 정렬
  // 실패율이 같은 경우 스테이지 번호 오름차순으로 정렬

  // 1부터 N까지의 스테이지 각각에 대해
  for (let i = 1; i <= N; i++) {
    // 현재 스테이지에 머물러 있는 사람의 수
    let 도전중인사람 = stages.filter((x) => x === i).length;
    // 현재 스테이지에 도달한 사람의 수
    let 도달한사람 = stages.filter((x) => x >= i).length;

    // 실패율 계산하고 스테이지 번호와 함께 저장
    result.push({
      스테이지: i,
      실패율: 도달한사람 === 0 ? 0 : 도전중인사람 / 도달한사람,
    });
  }

  return result
    .sort((a, b) => b.실패율 - a.실패율) // 실패율 높은순서대로 정렬 (내림차순)
    .map((x) => x.스테이지); // 정렬된 객체 배열에서 스테이지 번호만 뽑아내기 위해서!
}
